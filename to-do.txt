Categoria								Subcategoria							Função													Descrição
[X]Fundamentos Matemáticos				Comparações								equal(a, b)												Compara números de ponto flutuante com tolerância
[X]Fundamentos Matemáticos				Operações com Tuplas					add(t1, t2)												Adiciona duas tuplas
[X]Fundamentos Matemáticos				Operações com Tuplas					subtract(t1, t2)										Subtrai duas tuplas
[X]Fundamentos Matemáticos				Operações com Tuplas					negate(t)												Inverte o sinal de cada componente
[X]Fundamentos Matemáticos				Operações com Tuplas					multiply(t, scalar)										Multiplica tupla por escalar
[X]Fundamentos Matemáticos				Operações com Tuplas					divide(t, scalar)										Divide tupla por escalar
[X]Fundamentos Matemáticos				Operações com Vetores					magnitude(v)											Calcula o comprimento do vetor
[X]Fundamentos Matemáticos				Operações com Vetores					normalize(v)											Converte em vetor unitário
[X]Fundamentos Matemáticos				Operações com Vetores					dot(v1, v2)												Produto escalar entre vetores
[X]Fundamentos Matemáticos				Operações com Vetores					cross(v1, v2)											Produto vetorial entre vetores
[ ]Fundamentos Matemáticos				Auxiliares								radians(deg)											Converte graus para radianos
[ ]Fundamentos Matemáticos				Auxiliares								swap(tmin, tmax)										Troca valores de variáveis
[ ]Álgebra Linear						Matrizes								matrix(...)												Cria matrizes de diferentes dimensões
[ ]Álgebra Linear						Matrizes								identity_matrix()										Retorna matriz identidade
[ ]Álgebra Linear						Matrizes								multiply(m1, m2)										Multiplica duas matrizes
[ ]Álgebra Linear						Matrizes								multiply(m, tuple)										Multiplica matriz por tupla
[ ]Álgebra Linear						Matrizes								transpose(m)											Transpõe uma matriz
[ ]Álgebra Linear						Matrizes								inverse(m)												Inverte uma matriz
[ ]Álgebra Linear						Matrizes								determinant(m)											Calcula determinante da matriz
[ ]Álgebra Linear						Matrizes								submatrix(m, row, col)									Retorna submatriz removendo linha e coluna
[ ]Álgebra Linear						Matrizes								minor(m, row, col)										Calcula menor de um elemento
[ ]Álgebra Linear						Matrizes								cofactor(m, row, col)									Calcula cofator de um elemento
[ ]Álgebra Linear						Transformações							translation(x, y, z)									Cria matriz de translação
[ ]Álgebra Linear						Transformações							scaling(x, y, z)										Cria matriz de escala
[ ]Álgebra Linear						Transformações							rotation_x(radians)										Cria matriz de rotação no eixo X
[ ]Álgebra Linear						Transformações							rotation_y(radians)										Cria matriz de rotação no eixo Y
[ ]Álgebra Linear						Transformações							rotation_z(radians)										Cria matriz de rotação no eixo Z
[ ]Álgebra Linear						Transformações							shearing(xy, xz, yx, yz, zx, zy)						Cria matriz de cisalhamento
[ ]Geometria							Raios									ray(origin, direction)									Cria um raio com origem e direção
[ ]Geometria							Raios									position(ray, t)										Calcula posição no raio a uma distância t
[ ]Geometria							Raios									transform(ray, matrix)									Aplica transformação a um raio
[ ]Geometria							Formas Primitivas						sphere()												Cria objeto esfera
[ ]Geometria							Formas Primitivas						plane()													Cria objeto plano
[ ]Geometria							Formas Primitivas						cylinder()												Cria objeto cilindro
[ ]Geometria							Formas Primitivas						cone()													Cria objeto cone
[ ]Geometria							Formas Primitivas						cube()													Cria objeto cubo
[ ]Geometria							Formas Primitivas						triangle(p1, p2, p3)									Cria objeto triângulo
[ ]Geometria							Formas Primitivas						smooth_triangle(p1, p2, p3, n1, n2, n3)					Cria triângulo com interpolação de normais
[ ]Geometria							Interseções								intersect(shape, ray)									Função genérica para interseção
[ ]Geometria							Interseções								local_intersect(shape, local_ray)						Implementação específica de interseção
[ ]Geometria							Interseções								intersections(i1, i2, ...)								Agrega múltiplas interseções
[ ]Geometria							Interseções								hit(intersections)										Retorna a interseção mais visível
[ ]Iluminação							Luz										point_light(position, intensity)						Cria fonte de luz pontual
[ ]Iluminação							Normais									normal_at(shape, world_point, hit_intersection)			Calcula vetor normal genérico
[ ]Iluminação							Normais									local_normal_at(shape, local_point, hit_intersection)	Calcula normal específica para cada forma
[ ]Iluminação							Normais									reflect(in_vector, normal_vector)						Calcula vetor de reflexão
[ ]Iluminação							Modelo Phong							lighting(material, object, light, point, eyev, normalv, in_shadow)			Calcula cor conforme modelo de iluminação
[ ]Iluminação							Sombras									is_shadowed(world, point)								Verifica se ponto está em sombra
[ ]Iluminação							Reflexão/Refração						reflected_color(world, comps, remaining_depth)			Calcula cor de reflexão
[ ]Iluminação							Reflexão/Refração						refracted_color(world, comps, remaining_depth)			Calcula cor de refração
[ ]Iluminação							Reflexão/Refração						schlick(comps)											Aproximação de Fresnel
[ ]Iluminação							Padrões									pattern_at_shape(pattern, shape, point)					Função genérica para padrões
[ ]Estrutura de Cena					Mundo									world()													Cria mundo vazio
[ ]Estrutura de Cena					Mundo									default_world()											Cria mundo padrão para testes
[ ]Estrutura de Cena					Mundo									intersect_world(world, ray)								Intersecta raio com todos objetos
[ ]Estrutura de Cena					Mundo									shade_hit(world, comps, remaining_depth)				Calcula cor de interseção no mundo
[ ]Estrutura de Cena					Mundo									color_at(world, ray, remaining_depth)					Função de alto nível para calcular cor
[ ]Estrutura de Cena					Câmera									camera(hsize, vsize, field_of_view)						Cria objeto câmera
[ ]Estrutura de Cena					Câmera									ray_for_pixel(camera, x, y)								Gera raio para pixel específico
[ ]Estrutura de Cena					Câmera									render(camera, world)									Renderiza cena completa
[ ]Estrutura de Cena					Grupos									group()													Cria objeto grupo para organizar formas
[ ]Estrutura de Cena					Grupos									add_child(group, shape)									Adiciona forma como filho de grupo
[ ]Estrutura de Cena					CSG										csg(operation, left_shape, right_shape)					Cria objeto de geometria construtiva